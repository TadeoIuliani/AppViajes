// <auto-generated />
using System;
using AppViajesWirsolut.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppViajesWirsolut.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250417195707_CrearTablaVehiculos")]
    partial class CrearTablaVehiculos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppViajesWirsolut.Models.Ciudad", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiudadId"));

                    b.Property<int>("IdApiCiudad")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CiudadId");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("AppViajesWirsolut.Models.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiculoId"));

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Patente")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("VehiculoId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("AppViajesWirsolut.Models.Viaje", b =>
                {
                    b.Property<int>("ViajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ViajeId"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoViaje")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDestino")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.Property<string>("ViajeDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ViajeId");

                    b.HasIndex("CiudadId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("AppViajesWirsolut.Models.Viaje", b =>
                {
                    b.HasOne("AppViajesWirsolut.Models.Ciudad", "Ciudad")
                        .WithMany("Viajes")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppViajesWirsolut.Models.Vehiculo", "Vehiculo")
                        .WithMany("Viajes")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("AppViajesWirsolut.Models.Ciudad", b =>
                {
                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("AppViajesWirsolut.Models.Vehiculo", b =>
                {
                    b.Navigation("Viajes");
                });
#pragma warning restore 612, 618
        }
    }
}
